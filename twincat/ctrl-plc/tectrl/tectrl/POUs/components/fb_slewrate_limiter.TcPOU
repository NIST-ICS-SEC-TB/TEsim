<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.26">
  <POU Name="fb_slewrate_limiter" Id="{34efdff8-97cc-4209-970f-d30cd2e7d414}">
    <Declaration><![CDATA[FUNCTION_BLOCK fb_slewrate_limiter

VAR_INPUT
	in: REAL;
	pos_slewrate_limit: REAL := 0.0;
	neg_slewrate_limit: REAL := 0.0;
END_VAR

VAR_OUTPUT
	out: REAL;
END_VAR

VAR
	
	last_in: REAL := g_set_production;
	slope: REAL;

	fbCTRL_GET_TASK_CYCLETIME   : FB_CTRL_GET_TASK_CYCLETIME;
	tTaskCycleTime: TIME;
	bCycleTimeValid: BOOL;
	eErrorId: TC2_CONTROLLERTOOLBOX.E_CTRL_ERRORCODES;
	bError: BOOL;
    eState: E_CTRL_STATE;

END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[
fbCTRL_GET_TASK_CYCLETIME( eMode:=eCTRL_MODE_ACTIVE, tTaskCycleTime=>tTaskCycleTime, 
	bCycleTimeValid => bCycleTimeValid, 
	eState 			=> eState,
	eErrorId        => eErrorId,
    bError          => bError); 

IF bCycleTimevalid THEN 
	tTaskCycleTime :=fbCTRL_GET_TASK_CYCLETIME.tTaskCycleTime;
	
	slope := (last_in - in)/TIME_TO_REAL(tTaskCycleTime);
	IF slope >= pos_slewrate_limit THEN
		out := last_in + pos_slewrate_limit;
	ELSIF slope > pos_slewrate_limit THEN
		out := last_in - neg_slewrate_limit;
	ELSE
		out := in;	
	END_IF
ELSE
	out := last_in;
END_IF
last_in := in;

]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>